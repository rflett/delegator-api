{
	"info": {
		"_postman_id": "fc51e90a-eea8-4793-ad5f-011ab665a4e9",
		"name": "Integration Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Happy Path",
			"item": [
				{
					"name": "Health",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a1de99f-6763-49da-8d47-07d746cb2ba6",
								"exec": [
									"pm.test(\"health endpoint returns 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/health",
							"host": [
								"{{host}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup (backburner org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"backburner\",\n\t\"email\": \"ryan@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('jwt');\r",
									"});\r",
									"\r",
									"var jwt = jsonData.jwt;\r",
									"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ryan@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (Manager)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"backburner\",\n\t\"email\": \"james@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"MANAGER\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (User)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"backburner\",\n\t\"email\": \"luke@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Luke\",\n\t\"last_name\": \"Meeking\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"Nurse\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"// user created in previous create user should have id=2",
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Priorities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/priorities",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"priorities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task Type (Patient Transport)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Patient Transport2\",\n\t\"org_id\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9788b4b6-1790-4473-8d82-0b02eaee8ac5",
								"exec": [
									"pm.test(\"update user\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3294a4c4-eeb3-42d5-81e6-36f5bb09c087",
								"exec": [
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 1,\n\t\"email\": \"james@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"W. Turner\",\n\t\"role_name\": \"MANAGER\",\n\t\"job_title\": \"Promoted from Scrub\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "310d5b23-cc45-4b55-9f6f-b739a6a7f067",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ryan@sink.backburner.com\"\n}"
						},
						"url": {
							"raw": "{{host}}/reset_password",
							"host": [
								"{{host}}"
							],
							"path": [
								"reset_password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dcba06e-f8ea-47c7-a04a-5d6f0cbbb250",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup (eta org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"eta\",\n\t\"email\": \"ryan-eta@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Professor\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Manager Permissions Testing",
			"item": [
				{
					"name": "Login as Manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('jwt');\r",
									"});\r",
									"\r",
									"var jwt = jsonData.jwt;\r",
									"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"james@sink.backburner.com\",\n\t\"password\": \"secret\"\n}\n"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create another Manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"backburner\",\n\t\"email\": \"testmanager@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"MANAGER\",\n\t\"job_title\": \"ED Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"backburner\",\n\t\"email\": \"testuser@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"Scrub\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User in another Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"eta\",\n\t\"email\": \"testmanageetar@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"MANAGER\",\n\t\"job_title\": \"Mole\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"// user created in previous create user should have id=2",
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"pm.environment.set(\"user_id\", \"testuser@sink.backburner.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User from Other Org",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"// user created in previous create user should have id=2",
									"pm.environment.set(\"user_id\", \"ryan-eta@sink.backburner.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"correct number of roles returned\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.length);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Priorities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/priorities",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"priorities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task Type (Cleanup Aisle 3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Cleanup Aisle 3\",\n\t\"org_id\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task Type in another Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Move Equipment\",\n\t\"org_id\": 2\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9788b4b6-1790-4473-8d82-0b02eaee8ac5",
								"exec": [
									"pm.test(\"update user\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5cf430c7-7336-4350-bc23-ac65500dade7",
								"exec": [
									"pm.environment.set(\"user_id\", 3);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 1,\n\t\"email\": \"luke@sink.backburner.com\",\n\t\"first_name\": \"Lukass\",\n\t\"last_name\": \"Meeko\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"PROMOTED!!\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user in other org",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9788b4b6-1790-4473-8d82-0b02eaee8ac5",
								"exec": [
									"pm.test(\"update user forbidden\", function() {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.json;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4a538ccb-e7b6-4180-b442-506018e6ab1a",
								"exec": [
									"pm.environment.set(\"user_id\", 4);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 2,\n\t\"email\": \"ryan-eta@sink.backburner.com\",\n\t\"first_name\": \"Rizza\",\n\t\"last_name\": \"Dizza\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"Sikunt\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dcba06e-f8ea-47c7-a04a-5d6f0cbbb250",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "98a3698c-4bb4-488d-b3f8-b315389c2fa3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5cbd6457-e8f4-4c18-8bd0-90680c8cf996",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User Permissions Testing",
			"item": [
				{
					"name": "Login as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('jwt');\r",
									"});\r",
									"\r",
									"var jwt = jsonData.jwt;\r",
									"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"luke@sink.backburner.com\",\n\t\"password\": \"secret\"\n}\n"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"backburner\",\n\t\"email\": \"testuserother@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"Scrub 2.0\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User in another Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"eta\",\n\t\"email\": \"testmanageetarother@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"MANAGER\",\n\t\"job_title\": \"Physiotherapist\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID (self)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"// user created in previous create user should have id=3",
									"pm.environment.set(\"user_id\", 3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID (other)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID (other org)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"pm.environment.set(\"user_id\", 4);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Email (self)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"pm.environment.set(\"user_id\", \"luke@sink.backburner.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Email (other org)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"pm.environment.set(\"user_id\", \"ryan-eta@sink.backburner.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Priorities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/priorities",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"priorities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Forbidden Task\",\n\t\"org_id\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User (self)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9788b4b6-1790-4473-8d82-0b02eaee8ac5",
								"exec": [
									"pm.test(\"update user\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ae899045-8728-40a4-bc31-0f3ab6f92ff6",
								"exec": [
									"pm.environment.set(\"user_id\", 3);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 1,\n\t\"email\": \"luke@sink.backburner.com\",\n\t\"first_name\": \"Lukass\",\n\t\"last_name\": \"Meeko\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"Radiographer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user in other org",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9788b4b6-1790-4473-8d82-0b02eaee8ac5",
								"exec": [
									"pm.test(\"response is forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "152e8f4d-8022-46c6-be8b-23c2d544d8c4",
								"exec": [
									"pm.environment.set(\"user_id\", 4);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 2,\n\t\"email\": \"ryan-eta@sink.backburner.com\",\n\t\"first_name\": \"Rizza\",\n\t\"last_name\": \"Dizza\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"ED Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dcba06e-f8ea-47c7-a04a-5d6f0cbbb250",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "98a3698c-4bb4-488d-b3f8-b315389c2fa3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5cbd6457-e8f4-4c18-8bd0-90680c8cf996",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Version",
			"item": [
				{
					"name": "Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a1de99f-6763-49da-8d47-07d746cb2ba6",
								"exec": [
									"pm.test(\"health endpoint returns 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/health",
							"host": [
								"{{host}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Signup (test-login-org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"test-login\",\n\t\"email\": \"test-login@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email = int",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": 1,\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email None",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"notavalidemail\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password = int",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ryan@sink.backburner.com\",\n\t\"password\": 1234\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ryan@sink.backburner.com\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password wrong",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ryan@sink.backburner.com\",\n\t\"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"token in header\", function()  {\r",
									"    pm.response.to.have.header(\"Authorization\");\r",
									"});\r",
									"\r",
									"pm.test(\"set token\", function() {\r",
									"    const jwt = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", jwt);\r",
									"    pm.expect(pm.environment.get(\"token\")).to.equal(jwt); \r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"test-login@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Failed Login Attempt",
			"item": [
				{
					"name": "Signup (test-login-org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"failed-login-attempt\",\n\t\"email\": \"failed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f26981e2-14bf-4791-85e8-7b0f88f6f8a9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail 7 - in timeout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f26981e2-14bf-4791-85e8-7b0f88f6f8a9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Failed 8 - out of timeout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f26981e2-14bf-4791-85e8-7b0f88f6f8a9",
								"exec": [
									"setTimeout(function(){}, [6000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"Xfailed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "OK Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"token in header\", function()  {\r",
									"    pm.response.to.have.header(\"Authorization\");\r",
									"});\r",
									"\r",
									"pm.test(\"set token\", function() {\r",
									"    const jwt = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", jwt);\r",
									"    pm.expect(pm.environment.get(\"token\")).to.equal(jwt); \r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e130c136-38c4-4214-9d08-f7dd40738524",
								"exec": [
									"setTimeout(function(){}, [6000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"failed-login-attempt@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1a257c44-3bb0-4281-b16c-b110559b873c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a02546d5-bc77-4d84-b3cb-65e0a8f341c3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Create User",
			"item": [
				{
					"name": "Signup (create-user-org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"create-user@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('jwt');\r",
									"});\r",
									"\r",
									"var jwt = jsonData.jwt;\r",
									"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"create-user@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "email not a string (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": 1,\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "email not a string (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": true,\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "email missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "email invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"notavalidemail\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "email already exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"create-user@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "org missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"orgmissing@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "org doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"orgnotexist\",\n\t\"email\": \"orgnotexist@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "org not str or int",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": true,\n\t\"email\": \"orgwrongtype@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "password not a string",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"pwnotstring@sink.backburner.com\",\n\t\"password\": 1,\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "password missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"pwmissing@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname not string (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"firstnameisanint@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": 1,\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname not string (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"firstnameisabool@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": true,\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"fnisempty@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"firstnamemissing@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname not string (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"lnisanint@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": 1,\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname not string (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"lsibool@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": true,\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"lnisquotes@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"lnmissing@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "role not str (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"roleanint@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": 1,\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "role not str (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"roleisbool@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": true,\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "role str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"roleisquotes@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "role missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"rolemissing@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "role doesnt exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"rolenotexist@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"ROLETHATDOESNTEXIST\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "job_title not str (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"jobtitleint@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "job_title not str (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"jobtitlebool@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": true\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "job_title str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-user\",\n\t\"email\": \"jobisquotes@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update User",
			"item": [
				{
					"name": "Signup (update-user-org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"update-user@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup (existing-user-org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"existing-user\",\n\t\"email\": \"existing-user@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('jwt');\r",
									"});\r",
									"\r",
									"var jwt = jsonData.jwt;\r",
									"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"update-user@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set user_id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"pm.environment.set(\"user_id\", \"update-user@sink.backburner.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var update_user_id = jsonData.id;\r",
									"\r",
									"pm.environment.set(\"user_id\", update_user_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "email not a string (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": 1,\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "email not a string (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": true,\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "email missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "email invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "email already exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"existing-user@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "org missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"orgmissing@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "org doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"orgnotexist\",\n\t\"email\": \"orgnotexist@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "org not str or int",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": true,\n\t\"email\": \"orgwrongtype@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname not string (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"firstnameisanint@sink.backburner.com\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname not string (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"firstnameisabool@sink.backburner.com\",\n\t\"first_name\": true,\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"fnisempty@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "firstname missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"firstnamemissing@sink.backburner.com\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname not string (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"lnisanint@sink.backburner.com\",\n\t\"last_name\": 1,\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname not string (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"lsibool@sink.backburner.com\",\n\t\"last_name\": true,\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"lnisquotes@sink.backburner.com\",\n\t\"last_name\": \"\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "lastname missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"lnmissing@sink.backburner.com\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "role not str (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"roleanint@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": 1,\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "role not str (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"roleisbool@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": true,\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "role str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"roleisquotes@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "role missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"rolemissing@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "role doesnt exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"rolenotexist@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"ROLETHATDOESNTEXIST\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "job_title not str (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"jobtitleint@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "job_title not str (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"jobtitlebool@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": true\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "job_title str but empty (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"jobisquotes@sink.backburner.com\",\n\t\"last_name\": \"James\",\n\t\"first_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_id not int (str)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04da634c-d990-4192-953e-62623b2dea88",
								"exec": [
									"pm.environment.set(\"user_id\", \"update-user@sink.backburner.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"update-user@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_id not str (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04da634c-d990-4192-953e-62623b2dea88",
								"exec": [
									"pm.environment.set(\"user_id\", true);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"update-user@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "user does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04da634c-d990-4192-953e-62623b2dea88",
								"exec": [
									"pm.environment.set(\"user_id\", 9999999999999999999999999);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"update-user\",\n\t\"email\": \"update-user@sink.backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_name\": \"USER\",\n\t\"job_title\": \"l33t developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Task Types",
			"item": [
				{
					"name": "Signup (create-task-type-org)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"create-task-type\",\n\t\"email\": \"create-task-type@sink.backburner.com\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"Nurse Unit Manager\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('jwt');\r",
									"});\r",
									"\r",
									"var jwt = jsonData.jwt;\r",
									"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"create-task-type@sink.backburner.com\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Existing task type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"existing-task-type\",\n\t\"org_id\": {{org_id}}\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "org not int (str)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"A task type\",\n\t\"org_id\": \"hello\"\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "org not int (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"A task type\",\n\t\"org_id\": true\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "org missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"A task type\"\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "org doesnt exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"A task type\",\n\t\"org_id\": 9999999999999999\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "task type not str (int)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": 1,\n\t\"org_id\": {{org_id}}\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "task type not str (bool)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": true,\n\t\"org_id\": {{org_id}}\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "task type empty str (\"\")",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"\",\n\t\"org_id\": {{org_id}}\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "task type exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"existing-task-type\",\n\t\"org_id\": {{org_id}}\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f500c3be-7004-4530-ac51-877ac1f35adb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "70a92798-fd11-4f6d-a7e9-0105e7a20452",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0c31077f-3a3f-4184-922a-3d5783c91aba",
			"key": "host",
			"value": "api:5000",
			"type": "string"
		}
	]
}