{
	"info": {
		"_postman_id": "fc51e90a-eea8-4793-ad5f-011ab665a4e9",
		"name": "Integration Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Happy Path",
			"item": [
				{
					"name": "Health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/health",
							"host": [
								"{{host}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
								"exec": [
									"pm.test(\"signup is ok\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_name\": \"HappyPath\",\n\t\"email\": \"happypath1@backburner.com.au\",\n\t\"password\": \"secret\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"DevOps\"\n}"
						},
						"url": {
							"raw": "{{host}}/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(jsonData).to.have.property('jwt');\r",
									"});\r",
									"\r",
									"var jwt = jsonData.jwt;\r",
									"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"happypath1@backburner.com.au\",\n\t\"password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									"pm.test(\"create user is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"james@happypath.com.au\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_id\": \"USER\",\n\t\"job_title\": \"Developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"create task type is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"label\": \"Happy Task Type\",\n\t\"escalation_policies\": [\n\t\t{\n\t\t\t\"display_order\": 1,\n\t\t\t\"delay\": 30,\n\t\t\t\"from_priority\": 0,\n\t\t\t\"to_priority\": 1\n\t\t},\n\t\t{\n\t\t\t\"display_order\": 2,\n\t\t\t\"delay\": 60,\n\t\t\t\"from_priority\": 1,\n\t\t\t\"to_priority\": 2\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c53f32f-795b-41c9-9dcf-3896c67a31d0",
								"exec": [
									"pm.test(\"create task is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type_id\": 1,\n\t\"description\": \"Hello World\",\n\t\"status\": \"READY\",\n\t\"time_estimate\": 600,\n\t\"due_time\": \"2020-04-26T06:00:00Z+10:00\",\n\t\"priority\": 0\n}"
						},
						"url": {
							"raw": "{{host}}/tasks",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"assign task is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_id\": 1,\n\t\"assignee\": 2\n}\n"
						},
						"url": {
							"raw": "{{host}}/task/assign",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transition Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"transition task is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_id\": 1,\n\t\"task_status\": \"IN_PROGRESS\"\n}"
						},
						"url": {
							"raw": "{{host}}/task/transition",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"transition"
							]
						}
					},
					"response": []
				},
				{
					"name": "Drop Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"drop task is is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/task/drop/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"drop",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delay Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"delay task is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_id\": 1,\n\t\"delay_for\": 30,\n\t\"reason\": \"because I'm lazy\"\n}"
						},
						"url": {
							"raw": "{{host}}/task/delay",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"delay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/task/cancel/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"cancel",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Org Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "584b8d5a-50dd-4dc6-9dbf-e5887a25a661",
								"exec": [
									"pm.test(\"get org settings is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/org/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"org",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf571fe7-4bc1-486d-9245-6c7390b0607b",
								"exec": [
									"pm.test(\"get user settings is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/user/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"get users is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"get active users is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/users/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"get roles is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"get pages is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/user/pages",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Priorities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"get task priorities is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/tasks/priorities",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"priorities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"get tasks is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/tasks",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"get task types is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/tasks/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"get task statuses is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/tasks/statuses",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"// user created in previous create user should have id=2",
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"get user is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/user/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfbe987e-3aa9-46d0-b9c0-9c71e1b23b6d",
								"exec": [
									"pm.test(\"get task is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/task/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b7ffcce-2959-4c12-b238-606558e87ff3",
								"exec": [
									"pm.test(\"get user activity is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/user/activity/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"activity",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0b5e210-0e5b-4d09-9c98-ec516f65ebad",
								"exec": [
									"pm.test(\"get task activity is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/task/activity/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"activity",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Available Transitions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/task/transition/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"transition",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0b5e210-0e5b-4d09-9c98-ec516f65ebad",
								"exec": [
									"pm.test(\"get task activity is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/reporting/all",
							"host": [
								"{{host}}"
							],
							"path": [
								"reporting",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Org Settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/org/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"org",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user_id\": 1,\n\t\"tz_offset\": \"+1100\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9788b4b6-1790-4473-8d82-0b02eaee8ac5",
								"exec": [
									"pm.test(\"update user is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3294a4c4-eeb3-42d5-81e6-36f5bb09c087",
								"exec": [
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": 2,\n\t\"first_name\": \"James\",\n\t\"last_name\": \"W. Turner\",\n\t\"role_id\": \"MANAGER\",\n\t\"job_title\": \"Promoted from Scrub\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b613bb7d-b1a9-4d20-a24f-de62422a385f",
								"exec": [
									"pm.test(\"update task is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": 1,\n\t\"type_id\": 1,\n\t\"description\": \"Hello World\",\n\t\"status\": \"IN_PROGRESS\",\n\t\"time_estimate\": 300,\n\t\"due_time\": \"2019-10-31T21:00:00Z+10:00\",\n\t\"assignee\": 2,\n\t\"priority\": 1\n}\n"
						},
						"url": {
							"raw": "{{host}}/tasks",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"delete user is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/user/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable Task Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/tasks/types/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								"types",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dcba06e-f8ea-47c7-a04a-5d6f0cbbb250",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f500c3be-7004-4530-ac51-877ac1f35adb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "70a92798-fd11-4f6d-a7e9-0105e7a20452",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0c31077f-3a3f-4184-922a-3d5783c91aba",
			"key": "host",
			"value": "api:5000",
			"type": "string"
		}
	]
}