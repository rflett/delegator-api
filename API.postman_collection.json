{
	"info": {
		"_postman_id": "a8d65b75-178b-43ab-93be-4749cf968bbb",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Misc",
					"item": [
						{
							"name": "Get Active Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users/active",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"active"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed51681-1030-43df-9387-5a58d297a618",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/user/pages",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"pages"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3cd547e-6273-42f1-a9d2-128fcad2976d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"james@backburner.com.au\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"Turner\",\n\t\"role_id\": \"USER\",\n\t\"job_title\": \"Developer\"\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									"// user created in previous create user should have id=2",
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/user/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a997de87-9019-479f-956a-a9ab01a5df2c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2a442e9d-e958-48e9-aa44-abe36e745630",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"properties\": {\r",
									"            \"org_id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"id\": {\r",
									"                \"type\": \"integer\"\r",
									"            },\r",
									"            \"email\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"first_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"last_name\": {\r",
									"                \"type\": \"string\"\r",
									"            },\r",
									"            \"role_name\": {\r",
									"                \"type\": \"string\"\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, responseBody)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/user/8",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9788b4b6-1790-4473-8d82-0b02eaee8ac5",
								"exec": [
									"pm.test(\"update user\", function() {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3294a4c4-eeb3-42d5-81e6-36f5bb09c087",
								"exec": [
									"pm.environment.set(\"user_id\", 2);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": 1,\n\t\"email\": \"james@backburner.com\",\n\t\"first_name\": \"James\",\n\t\"last_name\": \"W. Turner\",\n\t\"role_id\": \"MANAGER\",\n\t\"job_title\": \"Promoted from Scrub\",\n\t\"disabled\": null\n}"
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f2d9d11-4430-468a-8726-a29c6c9d6698",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Activity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/user/activity/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"activity",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Types",
					"item": [
						{
							"name": "Create Task Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed51681-1030-43df-9387-5a58d297a618",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"label\": \"TT2\",\n\t\"escalation_policies\": [\n\t\t{\n\t\t\t\"display_order\": 1,\n\t\t\t\"delay\": 30,\n\t\t\t\"from_priority\": 0,\n\t\t\t\"to_priority\": 1\n\t\t},\n\t\t{\n\t\t\t\"display_order\": 2,\n\t\t\t\"delay\": 60,\n\t\t\t\"from_priority\": 1,\n\t\t\t\"to_priority\": 2\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{host}}/tasks/types",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks",
										"types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed51681-1030-43df-9387-5a58d297a618",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/tasks/types",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks",
										"types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Task Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed51681-1030-43df-9387-5a58d297a618",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/tasks/types/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks",
										"types",
										"2"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Misc",
					"item": [
						{
							"name": "Get Task Statuses",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed51681-1030-43df-9387-5a58d297a618",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/tasks/statuses",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks",
										"statuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Priorities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed51681-1030-43df-9387-5a58d297a618",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/tasks/priorities",
									"host": [
										"{{host}}"
									],
									"path": [
										"tasks",
										"priorities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Available Transitions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed51681-1030-43df-9387-5a58d297a618",
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/task/transition/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"task",
										"transition",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 1,\n\t\"type_id\": 1,\n\t\"description\": \"Hello World\",\n\t\"status\": \"READY\",\n\t\"time_estimate\": 600,\n\t\"due_time\": \"2020-04-26T06:00:00+10:00\",\n\t\"priority\": 0\n}"
						},
						"url": {
							"raw": "{{host}}/tasks",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/tasks",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/task/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Delayed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/task/delay/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"delay",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Activity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/task/activity/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"activity",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": 1,\n\t\"org_id\": 1,\n\t\"type_id\": 1,\n\t\"description\": \"Hello World\",\n\t\"status\": \"IN_PROGRESS\",\n\t\"time_estimate\": 300,\n\t\"due_time\": \"2020-03-31T21:00:00+10:00\",\n\t\"assignee\": 1,\n\t\"priority\": 1\n}\n"
						},
						"url": {
							"raw": "{{host}}/tasks",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_id\": 2,\n\t\"assignee\": 1\n}\n"
						},
						"url": {
							"raw": "{{host}}/task/assign",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Drop Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/task/drop/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"drop",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/task/cancel/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"cancel",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transition Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_id\": 1,\n\t\"task_status\": \"INPROGRESS\"\n}"
						},
						"url": {
							"raw": "{{host}}/task/transition",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"transition"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delay Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed51681-1030-43df-9387-5a58d297a618",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_id\": 1,\n\t\"delay_for\": 20,\n\t\"reason\": \"because I'm lazy\"\n}"
						},
						"url": {
							"raw": "{{host}}/task/delay",
							"host": [
								"{{host}}"
							],
							"path": [
								"task",
								"delay"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Settings",
			"item": [
				{
					"name": "Get User Settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/user/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user_id\": 1,\n\t\"tz_offset\": \"+1000\"\n}"
						},
						"url": {
							"raw": "{{host}}/user/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Org Settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/org/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"org",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Org Settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"org_id\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/org/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"org",
								"settings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reporting",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0b5e210-0e5b-4d09-9c98-ec516f65ebad",
								"exec": [
									"pm.test(\"get task activity is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{host}}/reporting/all",
							"host": [
								"{{host}}"
							],
							"path": [
								"reporting",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Organisation",
			"item": [
				{
					"name": "Update Subscription",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Skj170raAe2SsWQm4Ny",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"chargebee_customer_id\": \"2sUBzx5vRZMD2gy13jF\",\r\n\t\"plan_id\": \"basic\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/org/subscription",
							"host": [
								"{{host}}"
							],
							"path": [
								"org",
								"subscription"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6b10c2a9-c7f8-4953-b8a3-64d188a70e03",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"org_name\": \"BackBurner\",\n\t\"email\": \"ryan.flett@backburner.com.au\",\n\t\"password\": \"Ryanflett!1\",\n\t\"first_name\": \"Ryan\",\n\t\"last_name\": \"Flett\",\n\t\"job_title\": \"DevOps\",\n\t\"plan_id\": \"basic\"\n}"
				},
				"url": {
					"raw": "{{host}}/signup",
					"host": [
						"{{host}}"
					],
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cbd11473-6df8-4648-adda-2d86b6e11777",
						"exec": [
							"pm.test(\"response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData).to.have.property('jwt');\r",
							"});\r",
							"\r",
							"var jwt = jsonData.jwt;\r",
							"pm.environment.set(\"token\", \"Bearer \" + jwt);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Referer",
						"value": "ryan",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"admin@frontburner.com.au\",\n\t\"password\": \"B4ckburn3r\"\n}"
				},
				"url": {
					"raw": "{{host}}/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Notification Token",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"token_type\": \"ios\",\n\t\"token\": \"baz\"\n}"
				},
				"url": {
					"raw": "{{host}}/notification_token",
					"host": [
						"{{host}}"
					],
					"path": [
						"notification_token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deregister Notification Token",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"token_type\": \"android\"\n}"
				},
				"url": {
					"raw": "{{host}}/notification_token",
					"host": [
						"{{host}}"
					],
					"path": [
						"notification_token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Health",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/health",
					"host": [
						"{{host}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Roles",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fed51681-1030-43df-9387-5a58d297a618",
						"exec": [
							"pm.test(\"response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/roles",
					"host": [
						"{{host}}"
					],
					"path": [
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1dcba06e-f8ea-47c7-a04a-5d6f0cbbb250",
						"exec": [
							"pm.test(\"response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/logout",
					"host": [
						"{{host}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reset Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "310d5b23-cc45-4b55-9f6f-b739a6a7f067",
						"exec": [
							"pm.test(\"response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"ryan.flett1@gmail.com\"\n}"
				},
				"url": {
					"raw": "{{host}}/reset_password",
					"host": [
						"{{host}}"
					],
					"path": [
						"reset_password"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f500c3be-7004-4530-ac51-877ac1f35adb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "70a92798-fd11-4f6d-a7e9-0105e7a20452",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}