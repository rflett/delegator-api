stages:
  - lint
  # - unitTest
  - build
  - integrationTest
  - deploy

variables:
  AMZ_REGISTRY: 008492826001.dkr.ecr.ap-southeast-2.amazonaws.com
  GITLAB_REGISTRY: registry.gitlab.com/backburner/containers

flake8:
  stage: lint
  allow_failure: true
  image: $GITLAB_REGISTRY/python:latest
  only:
    - master
  script:
    - flake8 src/

# unitTest:
#   stage: unitTest
#   image: $GITLAB_REGISTRY/python:latest
#   script:
#     - cd src/
#     - pipenv install
#     - pipenv run python -m pytest

build:
  stage: build
  image: $GITLAB_REGISTRY/docker:latest
  only:
    - master
  services:
    - docker:dind
  tags:
    - docker
  script:
    # docker-login to ecr
    - eval $(aws ecr get-login --no-include-email)
    # build, tag, and push commit
    - docker build --build-arg COMMIT_SHA=$CI_COMMIT_SHA -t $AMZ_REGISTRY/api:$CI_COMMIT_SHA src/
    - docker push $AMZ_REGISTRY/api:$CI_COMMIT_SHA
    # tag and push latest
    - docker tag $AMZ_REGISTRY/api:$CI_COMMIT_SHA $AMZ_REGISTRY/api:latest
    - docker push $AMZ_REGISTRY/api:latest

integrationTest:
  stage: integrationTest
  image: $GITLAB_REGISTRY/docker:latest
  when: manual
  only:
    - master
  services:
    - docker:dind
  tags:
    - docker
  script:
    # docker-login to ecr
    - eval $(aws ecr get-login --no-include-email)

    # start services
    - docker run -d -p 5432:5432 --name postgres $AMZ_REGISTRY/postgres:latest
    - docker run -d
        -p 5000:5000 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID 
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY 
        -e APP_ENV=Ci 
        --name api 
        --link postgres:postgres 
        $AMZ_REGISTRY/api:latest

    # run tests
    - docker run 
      --link api:api 
      -v `pwd`/src/tests/integration:/newman 
      --name newman 
      $AMZ_REGISTRY/newman:latest 
      newman run /newman/integration.postman_collection.json

staging:
  stage: deploy
  image: $GITLAB_REGISTRY/python:latest
  only:
    - master
  tags:
    - docker
  script:
    - python deploy/deploy.py api staging
  environment:
    name: staging
    url: https://api-staging.backburner.online
