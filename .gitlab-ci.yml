
stages:
  - Lint
  - Build
  - Test
  - Deploy

variables:
  AMZ_REGISTRY: 008492826001.dkr.ecr.ap-southeast-2.amazonaws.com
  GITLAB_REGISTRY: registry.gitlab.com/backburner/containers
  IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

Flake8:
  stage: Lint
  allow_failure: true
  image: $GITLAB_REGISTRY/python:latest
  only:
    - master
    - develop
  script:
    - flake8 src/

Build:
  stage: Build
  image: $GITLAB_REGISTRY/docker:latest
  only:
    - master
    - develop
  services:
    - docker:dind
  tags:
    - docker
  script:
    # docker-login to ecr
    - eval $(aws ecr get-login --no-include-email)
    # build, tag, and push commit
    - docker pull $AMZ_REGISTRY/$CI_PROJECT_NAME:latest
    - docker build --build-arg COMMIT_SHA=$CI_COMMIT_SHORT_SHA -t $AMZ_REGISTRY/$CI_PROJECT_NAME:$IMAGE_TAG --cache-from $AMZ_REGISTRY/$CI_PROJECT_NAME:latest src/
    - docker push $AMZ_REGISTRY/$CI_PROJECT_NAME:$IMAGE_TAG
    # tag and push latest
    - docker tag $AMZ_REGISTRY/$CI_PROJECT_NAME:$IMAGE_TAG $AMZ_REGISTRY/$CI_PROJECT_NAME:latest
    - docker push $AMZ_REGISTRY/$CI_PROJECT_NAME:latest

Integration:
  stage: Test
  image: $GITLAB_REGISTRY/docker:latest
  variables:
    APP_ENV: Ci
  services:
    - docker:dind
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master"'
      when: manual
    - when: on_success
  only:
    - master
    - develop
  script:
    # docker-login to ecr
    - eval $(aws ecr get-login --no-include-email)

    # start services
    - docker run -d -p 5432:5432 --name postgres $AMZ_REGISTRY/postgres:latest
    - docker run -d
        -p 5000:5000 
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID 
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY 
        -e APP_ENV=$APP_ENV
        --name api 
        --link postgres:postgres 
        $AMZ_REGISTRY/$CI_PROJECT_NAME:$IMAGE_TAG

    # run tests
    - pytest tests/integration/

.deploy:
  stage: Deploy
  environment:
    name: $DEPLOY_ENV
    url: https://api-$DEPLOY_ENV.backburner.online/v
  only:
    - master
  script:
    - "curl 
      -X POST
      -F token=4087c68b61838a88958e72580177a2 
      -F ref=master 
      -F variables[IMAGE]=$AMZ_REGISTRY/$CI_PROJECT_NAME:$IMAGE_TAG
      -F variables[DEPLOY_ENV]=$DEPLOY_ENV 
      -F variables[PROJECT]=$CI_PROJECT_NAME
      https://gitlab.com/api/v4/projects/14042887/trigger/pipeline"

Staging:
  extends: .deploy
  variables:
    DEPLOY_ENV: staging
